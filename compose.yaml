version: '3.9'
services:
  app-auth-service:
    build:
      context: ./authorization
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8000:8000"
    expose:
      - "8000"
    networks:
      - internal
    depends_on:
      - auth-db
    environment:
      - DATABASE_URL=postgresql://my_user:qwerty@db-auth:5432/auth_db
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}

  book-manager-service:
    build:
      context: ./bookmanager
      dockerfile: Dockerfile
    container_name: book-manager-service
    ports:
      - "8001:8001"
    expose:
      - "8001"
    networks:
      - internal
    depends_on:
      - book-manager-db
    environment:
      - DATABASE_URL=postgresql://my_user:qwerty@db-book-manager:5432/book_db
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}


  auth-db:
    image: postgres:15
    container_name: db-auth
    environment:
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: auth_db
    ports:
      - "5434:5432"
    expose:
      - "5432"
    networks:
      - internal
    volumes:
      - auth-db-data:/var/lib/postgresql/data

  book-manager-db:
    image: postgres:15
    container_name: db-book-manager
    environment:
      POSTGRES_USER: my_user
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: book_db
    ports:
      - "5433:5432"
    expose:
      - "5432"
    networks:
      - internal
    volumes:
      - manager-book-db-data:/var/lib/postgresql/data

  apigetaway:
    image: nginx:latest
    container_name: apigetaway
    ports:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
    depends_on:
      - app-auth-service
      - book-manager-service
    networks:
      - internal
      - external

networks:
  internal:
    driver: bridge
  external:
    driver: bridge

volumes:
  auth-db-data:
  manager-book-db-data:


#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 2181:2181

#  kafka:
#      image: confluentinc/cp-kafka:latest
#      depends_on:
#        - zookeeper
#      ports:
#        - 9092:9092
#        - 29092:29092
#      environment:
#        KAFKA_BROKER_ID: 1
#        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
#        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

